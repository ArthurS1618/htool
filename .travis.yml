sudo: false

# Git options
git:
  submodules: false

# Enable c++ support
language: cpp

# # Cache
# cache:
#   directories:
#     - $HOME/Library/Caches/Homebrew


# Compiler selection
matrix:
  include:
    # Tests on osx
    - os: osx
      env:
        - CXX_COMPILER=clang++
        - C_COMPILER=clang
      install:
        - brew install mpich
    ## mpich does not work anymore with gcc
    ## it would need to be compiled with gcc...
    # - os: osx
    #   env:
    #     - CXX_COMPILER=g++-7
    #     - C_COMPILER=gcc-7
    #   install:
    #     - brew install gcc
    #     - brew install mpich
    - os: osx
      env:
        - CXX_COMPILER=clang++
        - C_COMPILER=clang
        - MPIEXEC_PREFLAGS=-oversubscribe
      install:
        - brew install openmpi
    # - os: osx
    #   env:
    #     - CXX_COMPILER=g++-8
    #     - C_COMPILER=gcc-8
    #   install:
    #     - brew install gcc
    #     - brew install openmpi
    #     - MPIEXEC_PREFLAGS=-oversubscribe

    # Tests on linux
    # - os: linux
    #   dist: trusty
    #   group: travis_latest
    #   env:
    #     - CXX_COMPILER=g++-4.9
    #     - C_COMPILER=gcc-4.9
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #         - g++-4.9
    #         - cmake
    #         - openmpi-bin
    #         - libopenmpi-dev
    #         - libblas-dev
    #         - liblapack-dev
    #         # - libmumps-dev
    #         - libsuitesparse-dev
    #
    # - os: linux
    #   dist: trusty
    #   group: travis_latest
    #   env:
    #     - CXX_COMPILER=clang++-3.6
    #     - C_COMPILER=clang-3.6
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #         - llvm-toolchain-precise-3.6
    #       packages:
    #         - clang-3.6
    #         - cmake
    #         - openmpi-bin
    #         - libopenmpi-dev
    #         - libblas-dev
    #         - liblapack-dev
    #         # - libmumps-dev
    #         - libsuitesparse-dev

    # - os: linux
    #   dist: trusty
    #   group: travis_latest
    #   env:
    #     - CXX_COMPILER=g++
    #     - C_COMPILER=gcc
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #         # - g++
    #         # - cmake
    #         - mpich
    #         - libmpich-dev
    #         - libblas-dev
    #         - liblapack-dev
    #         # - libmumps-dev
    #         - libsuitesparse-dev

    # - os: linux
    #   dist: trusty
    #   group: travis_latest
    #   env:
    #     - CXX_COMPILER=clang++
    #     - C_COMPILER=clang
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #         # - llvm-toolchain-precise-3.6
    #       packages:
    #         # - clang-3.6
    #         # - cmake
    #         - mpich
    #         - libmpich-dev
    #         - libblas-dev
    #         - liblapack-dev
    #         # - libmumps-dev
    #         - libsuitesparse-dev


    - os: linux
      dist: xenial
      group: travis_latest
      compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - mpich
            - libmpich-dev
            - libblas-dev
            - liblapack-dev
            - libsuitesparse-dev

    - os: linux
      dist: xenial
      group: travis_latest
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - mpich
            - libmpich-dev
            - libblas-dev
            - liblapack-dev
            - libsuitesparse-dev





# Updates
before_install:
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew upgrade cmake; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew install suite-sparse; fi
  - cd .. && git clone https://github.com/hpddm/hpddm.git && cd htool



before_script:
  - which $CXX_COMPILER
  - mkdir build
  - cd build

# Build steps
script:
  - CC=$C_COMPILER CXX=$CXX_COMPILER cmake ../ -DMPIEXEC_PREFLAGS=${MPIEXEC_PREFLAGS}
  - make -j build-tests
  - export OMP_NUM_THREADS=2
  - ctest --output-on-failure
